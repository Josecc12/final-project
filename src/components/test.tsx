/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/bv1a4rgYWjT
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Checkbox } from "@/components/ui/checkbox"

export function Test() {
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedCategories, setSelectedCategories] = useState([])
  const categories = [
    { id: 1, name: "Electrónica", products: 120 },
    { id: 2, name: "Moda", products: 85 },
    { id: 3, name: "Hogar", products: 72 },
    { id: 4, name: "Deportes", products: 45 },
    { id: 5, name: "Juguetes", products: 30 },
    { id: 6, name: "Belleza", products: 65 },
    { id: 7, name: "Libros", products: 92 },
    { id: 8, name: "Música", products: 55 },
  ]
  const filteredCategories = categories.filter((category) =>
    category.name.toLowerCase().includes(searchTerm.toLowerCase()),
  )
  const handleCategorySelect = (categoryId) => {
    if (selectedCategories.includes(categoryId)) {
      setSelectedCategories(selectedCategories.filter((id) => id !== categoryId))
    } else {
      setSelectedCategories([...selectedCategories, categoryId])
    }
  }
  const handleSearch = (e) => {
    setSearchTerm(e.target.value)
  }
  const handleClearFilters = () => {
    setSearchTerm("")
    setSelectedCategories([])
  }
  return (
    <div className="bg-background p-6 rounded-lg shadow-lg">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-2xl font-bold">Categorías de Productos</h1>
        <div className="flex items-center gap-4">
          <Input
            type="text"
            placeholder="Buscar categorías..."
            value={searchTerm}
            onChange={handleSearch}
            className="bg-muted text-muted-foreground rounded-md px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
          />
          <Button
            onClick={handleClearFilters}
            className="bg-primary text-primary-foreground rounded-md px-4 py-2 hover:bg-primary-hover"
          >
            Borrar filtros
          </Button>
        </div>
      </div>
      <div className="overflow-x-auto">
        <table className="w-full table-auto">
          <thead>
            <tr className="bg-muted text-muted-foreground">
              <th className="px-4 py-3 text-left">Categoría</th>
              <th className="px-4 py-3 text-right">Productos</th>
              <th className="px-4 py-3 text-right">Filtrar</th>
              <th className="px-4 py-3 text-right">Buscar</th>
            </tr>
          </thead>
          <tbody>
            {filteredCategories.map((category) => (
              <tr key={category.id} className="border-b border-muted/20 hover:bg-muted/10">
                <td className="px-4 py-3 text-left">
                  <div className="flex items-center gap-2">
                    <Checkbox
                      checked={selectedCategories.includes(category.id)}
                      onCheckedChange={() => handleCategorySelect(category.id)}
                    />
                    <span>{category.name}</span>
                  </div>
                </td>
                <td className="px-4 py-3 text-right">
                  <span className="font-medium">{category.products}</span>
                </td>
                <td className="px-4 py-3 text-right">
                  <Button size="icon" variant="ghost" className="text-muted-foreground hover:text-foreground">
                    <FilterIcon className="w-5 h-5" />
                  </Button>
                </td>
                <td className="px-4 py-3 text-right">
                  <Button size="icon" variant="ghost" className="text-muted-foreground hover:text-foreground">
                    <SearchIcon className="w-5 h-5" />
                  </Button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  )
}

function FilterIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" />
    </svg>
  )
}


function SearchIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}
